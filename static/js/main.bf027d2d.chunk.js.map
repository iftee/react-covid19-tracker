{"version":3,"sources":["helpers.js","components/Cards/Cards.js","api/index.js","components/Chart/Chart.js","components/CountryPicker/CountryPicker.js","components/AppHeader/AppHeader.js","components/AppFooter/AppFooter.js","components/BackToTop/BackToTop.js","App.js","index.js"],"names":["formatDate","date","providedDate","Date","getDay","getMonth","getDate","getFullYear","useStyles","makeStyles","theme","card","borderRadius","padding","textAlign","height","boxShadow","subtitle1","textTransform","fontSize","letterSpacing","margin","h5","fontWeight","loading","paddingTop","colorInfected","color","colorRecovered","colorDied","Cards","data","confirmed","recovered","deaths","lastUpdate","classes","Grid","container","spacing","item","xs","sm","md","Card","className","CardContent","Typography","variant","cx","start","end","value","duration","separator","url","fetchData","country","a","dynamicURL","axios","get","collectedData","console","log","fetchDailyData","map","dailyData","total","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","options","legend","fontStyle","fontFamily","fontColor","scales","xAxes","ticks","yAxes","barChart","backgroundColor","display","title","text","formControl","width","minWidth","formHelperText","selectWrapper","paddingRight","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","fetchCountryAPI","FormControl","Select","defaultValue","onChange","event","selectedCountry","target","inputProps","MenuItem","iterator","key","FormHelperText","appHeaderStyles","root","backgroundImage","toolBar","maxWidth","justifyContent","brandTitle","lineHeight","ElevationScroll","props","children","trigger","useScrollTrigger","disableHysteresis","threshold","React","cloneElement","elevation","AppHeader","toggleTheme","toggleThemeIcon","AppBar","Toolbar","IconButton","menuButton","aria-label","onClick","id","appFooterStyles","paddingBottom","AppFooter","Container","href","rel","backTopStyles","position","bottom","right","ScrollTop","Zoom","in","anchor","document","querySelector","scrollIntoView","behavior","block","role","BackToTop","Fab","size","firstItem","marginTop","App","setData","setCountry","themeObject","palette","type","primary","red","typography","join","setTheme","localThemePaletteType","window","localStorage","getItem","updatedTheme","muiTheme","createMuiTheme","CssBaseline","setItem","ReactDom","render","getElementById"],"mappings":"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","file":"static/js/main.bf027d2d.chunk.js","sourcesContent":["// Convert date to Weekday, Month DD, YYYY format\r\nexport const formatDate = (date) => {\r\n  var providedDate = new Date(date);\r\n  var monthInWord = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n  var weekdayInWord = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n  return weekdayInWord[providedDate.getDay()] + ', ' + monthInWord[providedDate.getMonth()] + ' ' + providedDate.getDate() + ', ' + providedDate.getFullYear();\r\n}","import React from 'react';\r\nimport { Grid, Card, CardContent, Typography, makeStyles } from '@material-ui/core';\r\nimport { formatDate } from '../../helpers';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nconst useStyles = makeStyles(theme => ({  \r\n  card: {\r\n    borderRadius: 12,\r\n    padding: 12,\r\n    textAlign: 'center',\r\n    height: '100%',\r\n    boxShadow: '0 5px 15px -5px rgba(0, 0, 0, 0.2)',\r\n  },\r\n  subtitle1: {\r\n    textTransform: 'uppercase',\r\n    fontSize: '.75rem',\r\n    letterSpacing: 2,\r\n    margin: '0',\r\n  },\r\n  h5: {\r\n    fontSize: '2.5rem',\r\n    fontWeight: 300,\r\n    margin: '12px 0 24px',\r\n  },\r\n  loading: {\r\n    textAlign: 'center',\r\n    paddingTop: 16,\r\n  },\r\n  colorInfected: {\r\n    color: '#ffc107',\r\n  },\r\n  colorRecovered: {\r\n    color: '#4caf50',\r\n  },\r\n  colorDied: {\r\n    color: '#f44336',\r\n  },\r\n}));\r\n\r\nexport const Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n  const classes = useStyles();  \r\n\r\n  return (\r\n    (!confirmed) ?\r\n      <p className={ classes.loading }>Loading...</p>\r\n      :\r\n    <Grid container spacing={ 4 }>\r\n      <Grid item xs={ 12 } sm={ 6 } md={ 4 }>\r\n        <Card className={ classes.card }>\r\n          <CardContent>\r\n            <Typography variant=\"subtitle1\" color=\"textSecondary\" className={ cx(classes.subtitle1, classes.colorInfected) }>Infected</Typography>\r\n            <Typography className={ cx(classes.h5, classes.colorInfected) }>\r\n              <CountUp start={ 0 } end={ confirmed.value } duration={ 1 } separator=\",\" />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\"><small>Last updated on:<br/>{ formatDate(lastUpdate) }</small></Typography>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={ 12 } sm={ 6 } md={ 4 }>\r\n        <Card className={ classes.card }>\r\n          <CardContent>\r\n            <Typography variant=\"subtitle1\" color=\"textSecondary\" className={ cx(classes.subtitle1, classes.colorRecovered) }>Recovered</Typography>\r\n            <Typography className={ cx(classes.h5, classes.colorRecovered) }>\r\n              <CountUp start={ 0 } end={ recovered.value } duration={ 1 } separator=\",\" />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\"><small>Last updated on:<br/>{ formatDate(lastUpdate) }</small></Typography>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={ 12 } sm={ 6 } md={ 4 }>\r\n        <Card className={ classes.card }>\r\n          <CardContent>\r\n            <Typography variant=\"subtitle1\" color=\"textSecondary\" className={ cx(classes.subtitle1, classes.colorDied) }>Died</Typography>\r\n            <Typography className={ cx(classes.h5, classes.colorDied) }>\r\n              <CountUp start={ 0 } end={ deaths.value } duration={ 1 } separator=\",\" />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\"><small>Last updated on:<br/>{ formatDate(lastUpdate) }</small></Typography>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async country => {\r\n  let dynamicURL = url;\r\n  if(country) {\r\n    dynamicURL = `${ url }/countries/${ country }`;\r\n  }\r\n  try {\r\n    const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(dynamicURL);\r\n    const collectedData = { confirmed, recovered, deaths, lastUpdate };\r\n    return collectedData;\r\n  } catch(error) {\r\n    console.log('Error: ' + error);\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${ url }/daily`);\r\n    const collectedData = data.map(dailyData => ({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      date: dailyData.reportDate,\r\n    }));\r\n    return collectedData;\r\n  } catch(error) {\r\n    console.log('Error: ' + error);\r\n  }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const { data: { countries } } = await axios.get(`${ url }/countries`);\r\n    return countries.map(country => country.name);\r\n  } catch(error) {\r\n    console.log('Error: ' + error);\r\n  }\r\n};","import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nexport const Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setDailyData(await fetchDailyData());\r\n    };\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  const lineChart = (\r\n    dailyData.length ? (\r\n      <Line\r\n        data={ {\r\n          labels: dailyData.map(({ date }) => date),\r\n          datasets: [\r\n            {\r\n              data: dailyData.map(({ confirmed }) => confirmed),\r\n              label: 'Infected',\r\n              borderColor: '#ffc107',\r\n              fill: false,\r\n            },\r\n            {\r\n              data: dailyData.map(({ deaths }) => deaths),\r\n              label: 'Died',\r\n              borderColor: '#f44336',\r\n              fill: false,\r\n            },\r\n          ]\r\n        } }\r\n        options={ {\r\n          legend: {\r\n            labels: {\r\n              fontStyle: 'normal',\r\n              fontFamily: \"'Inter', sans-serif\",\r\n              fontColor: '#9e9e9e',\r\n            },\r\n          },\r\n          scales: {\r\n            xAxes: [\r\n              {\r\n                ticks: {\r\n                  fontStyle: 'normal',\r\n                  fontFamily: \"'Inter', sans-serif\",\r\n                  fontColor: '#9e9e9e',\r\n                },\r\n              },\r\n            ],\r\n            yAxes: [\r\n              {\r\n                ticks: {\r\n                  fontStyle: 'normal',\r\n                  fontFamily: \"'Inter', sans-serif\",\r\n                  fontColor: '#9e9e9e',\r\n                },\r\n              },\r\n            ],\r\n          },\r\n        } }\r\n      />\r\n    ) : null\r\n  );\r\n\r\n  const barChart = (\r\n    confirmed ? (\r\n      <Bar\r\n        data={ {\r\n          labels: ['Infected', 'Recovered', 'Died'],\r\n          datasets: [\r\n            {\r\n              data: [confirmed.value, recovered.value, deaths.value],\r\n              label: 'People',\r\n              backgroundColor: ['#ffc107', '#4caf50', '#f44336'],\r\n            }            \r\n          ],\r\n        } }\r\n        options={ {\r\n          legend: {\r\n            display: false,\r\n          },\r\n          title: {\r\n            display: true,\r\n            text: [`Current sitaution in ${ country }`, 'Historical data are not availble'],\r\n            fontStyle: 'normal',\r\n            fontFamily: \"'Inter', sans-serif\",\r\n            fontSize: 13,\r\n            fontColor: '#9e9e9e',\r\n          },\r\n          scales: {\r\n            xAxes: [\r\n              {\r\n                ticks: {\r\n                  fontStyle: 'normal',\r\n                  fontFamily: \"'Inter', sans-serif\",\r\n                  fontColor: '#9e9e9e',\r\n                },\r\n              },\r\n            ],\r\n            yAxes: [\r\n              {\r\n                ticks: {\r\n                  fontStyle: 'normal',\r\n                  fontFamily: \"'Inter', sans-serif\",\r\n                  fontColor: '#9e9e9e',\r\n                },\r\n              },\r\n            ],\r\n          },\r\n        } }\r\n      />\r\n    ) : null\r\n  );\r\n  \r\n  return (\r\n    <>\r\n      { country? barChart : lineChart }\r\n    </>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { FormControl, Select, MenuItem, FormHelperText, makeStyles } from '@material-ui/core';\r\nimport { fetchCountries } from '../../api';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    width: '50%',\r\n    minWidth: 248,\r\n  },\r\n  formHelperText: {\r\n    textAlign: 'center',\r\n  },\r\n  selectWrapper: {\r\n    '&>div': {\r\n      paddingRight: '0 !important',\r\n    },\r\n  },\r\n}));\r\n\r\nexport const CountryPicker = ({ handleCountryChange }) => {\r\n  const classes = useStyles();\r\n  const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchCountryAPI = async () => {\r\n      setFetchedCountries(await fetchCountries());\r\n    };\r\n    fetchCountryAPI();\r\n  }, [setFetchedCountries]);\r\n\r\n  return (\r\n    <FormControl className={classes.formControl}>\r\n      <Select\r\n        defaultValue=\"Worldwide\"\r\n        onChange={ event => {\r\n          let selectedCountry = event.target.value;\r\n          if(event.target.value === 'Worldwide') {\r\n            selectedCountry = '';\r\n          }\r\n          handleCountryChange(selectedCountry);\r\n        } }\r\n        inputProps={ { 'aria-label': 'Without label' } }\r\n        className={ classes.selectWrapper }\r\n      >\r\n        <MenuItem value=\"Worldwide\">Worldwide</MenuItem>\r\n        { fetchedCountries.map((country, iterator) => <MenuItem key={ iterator } value={ country }>{ country }</MenuItem>) }\r\n      </Select>\r\n      <FormHelperText className={ classes.formHelperText }>Select Country</FormHelperText>\r\n    </FormControl>\r\n  );\r\n}","import React from 'react';\r\nimport { AppBar, Toolbar, IconButton, makeStyles, useScrollTrigger } from '@material-ui/core';\r\nimport Brightness4Icon from '@material-ui/icons/Brightness4Outlined';\r\nimport Brightness7Icon from '@material-ui/icons/Brightness7Outlined';\r\n\r\nconst appHeaderStyles = makeStyles({\r\n  root: {\r\n    backgroundImage: 'linear-gradient(90deg, #b71c1c 0%, #d50000 75%)',\r\n    '&.MuiPaper-elevation4': {\r\n      boxShadow: '0 5px 15px -5px rgba(0, 0, 0, 0.2)',\r\n    },\r\n  },\r\n  toolBar: {\r\n    margin: '0 auto',\r\n    width: '100%',\r\n    maxWidth: 1280,    \r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  brandTitle: {\r\n    fontSize: '1rem',\r\n    fontWeight: 500,\r\n    lineHeight: 1.6,\r\n    textTransform: 'uppercase',\r\n    letterSpacing: '2px',\r\n  },\r\n});\r\n\r\nfunction ElevationScroll(props) {\r\n  const { children } = props;\r\n\r\n  const trigger = useScrollTrigger({\r\n    disableHysteresis: true,\r\n    threshold: 0\r\n  });\r\n\r\n  return React.cloneElement(children, {\r\n    elevation: trigger ? 4 : 0,\r\n  });\r\n}\r\n\r\nexport const AppHeader = ({ toggleTheme, toggleThemeIcon }) => {\r\n  const classes = appHeaderStyles();\r\n\r\n  return (\r\n    <>     \r\n      <ElevationScroll>\r\n        <AppBar className={classes.root}>\r\n          <Toolbar className={classes.toolBar}>\r\n            <div className={classes.brandTitle}>\r\n              COVID-19 UPDATES\r\n            </div>\r\n            <IconButton\r\n              className={classes.menuButton}\r\n              color=\"inherit\"\r\n              aria-label=\"Switch Light/Dark Theme\"\r\n              onClick={toggleTheme}\r\n            >\r\n              {toggleThemeIcon === 'dark' ? \r\n                <Brightness4Icon />\r\n                :\r\n                <Brightness7Icon />\r\n              }                \r\n            </IconButton>        \r\n          </Toolbar>          \r\n        </AppBar>\r\n      </ElevationScroll> \r\n      <Toolbar id=\"back-to-top-anchor\" />     \r\n    </>\r\n  );\r\n}","import React from 'react';\r\nimport { Container, makeStyles } from '@material-ui/core';\r\n\r\nconst appFooterStyles = makeStyles({\r\n  root: {\r\n    paddingTop: 24,\r\n    paddingBottom: 24,\r\n    textAlign: 'center',\r\n  },\r\n  a: {\r\n    color: '#f44336',\r\n  },\r\n});\r\n\r\nexport const AppFooter = () => {\r\n  const classes = appFooterStyles();\r\n\r\n  return(\r\n    <Container maxWidth=\"lg\" className={classes.root}>\r\n      <p>A React based project to view worldwide COVID-19 data using <a href=\"https://mathdro.id\" target=\"_blank\" rel=\"noopener noreferrer\" className={classes.a}>mathdroid</a>'s <a href=\"https://covid19.mathdro.id/api\" target=\"_blank\" rel=\"noopener noreferrer\" className={classes.a}>COVID-19 API</a>. <br/>View repository on <a href=\"https://github.com/iftee/react-covid19-tracker\" target=\"_blank\" rel=\"noopener noreferrer\" className={classes.a}>GitHub</a>.</p>\r\n    </Container>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles, useScrollTrigger, Fab, Zoom } from '@material-ui/core';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\n\r\nconst backTopStyles = makeStyles(theme => ({\r\n  root: {\r\n    position: 'fixed',\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),    \r\n  },\r\n}));\r\n\r\nfunction ScrollTop(props) {\r\n  const { children } = props;\r\n  const classes = backTopStyles();\r\n  const trigger = useScrollTrigger({   \r\n    disableHysteresis: true,\r\n    threshold: 100,\r\n  });\r\n\r\n  const handleClick = event => {\r\n    const anchor = document.querySelector('#back-to-top-anchor');\r\n\r\n    if (anchor) {\r\n      anchor.scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n    }\r\n  };\r\n\r\n  return(\r\n    <Zoom in={trigger}>\r\n      <div onClick={handleClick} role=\"presentation\" className={ classes.root}>\r\n        {children}\r\n      </div>\r\n    </Zoom>\r\n  );\r\n}\r\n\r\nexport const BackToTop = props => {\r\n  return (\r\n    <ScrollTop {...props}>\r\n      <Fab color=\"primary\" size=\"small\" aria-label=\"scroll back to top\">\r\n        <KeyboardArrowUpIcon />\r\n      </Fab>\r\n    </ScrollTop>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { MuiThemeProvider, createMuiTheme, CssBaseline, Container, Grid, Card, CardContent, makeStyles } from '@material-ui/core';\r\nimport { Cards, Chart, CountryPicker, AppHeader, AppFooter, BackToTop } from './components';\r\nimport { fetchData } from './api';\r\nimport red from '@material-ui/core/colors/red';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    borderRadius: 12,\r\n    padding: 12,\r\n    textAlign: 'center',\r\n    height: '100%',\r\n    boxShadow: '0 5px 15px -5px rgba(0, 0, 0, 0.2)',\r\n  },\r\n  firstItem: {\r\n    marginTop: 0,\r\n  },\r\n}));\r\n\r\nexport const App = () => {\r\n  const [data, setData] = useState({});\r\n  const [country, setCountry] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async country => {\r\n      setData(await fetchData(country));\r\n      setCountry(country);\r\n    };\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  const handleCountryChange = async country => {\r\n    setData(await fetchData(country));\r\n    setCountry(country);\r\n  };\r\n\r\n  const themeObject = {\r\n    palette: {\r\n      type: 'dark',\r\n      primary: red,\r\n    },\r\n    typography: {\r\n      fontFamily: [\r\n        'Inter',\r\n        'sans-serif',\r\n      ].join(','),\r\n    },\r\n  }\r\n  const [theme, setTheme] = useState(themeObject);\r\n\r\n  const toggleTheme = () => {\r\n    if (theme.palette.type === 'dark') {      \r\n      window.localStorage.setItem('rc19dThemePaletteType', 'light');\r\n      const updatedTheme = {\r\n        ...theme,\r\n        palette: {\r\n          ...theme.palette,\r\n          type: 'light'\r\n        }\r\n      }\r\n      setTheme(updatedTheme);\r\n    } else {\r\n      window.localStorage.setItem('rc19dThemePaletteType', 'dark'); \r\n      setTheme(themeObject);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const localThemePaletteType = window.localStorage.getItem('rc19dThemePaletteType');\r\n    if (localThemePaletteType) {\r\n      const updatedTheme = {\r\n        ...theme,\r\n        palette: {\r\n          ...theme.palette,\r\n          type: localThemePaletteType\r\n        }\r\n      }\r\n      setTheme(updatedTheme);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const muiTheme = createMuiTheme(theme);\r\n  let toggleThemeIcon = muiTheme.palette.type === 'light' ? 'dark' : 'light';\r\n\r\n  const classes = useStyles();\r\n\r\n  return(\r\n    <MuiThemeProvider theme={muiTheme}>\r\n      <CssBaseline />\r\n      <AppHeader toggleTheme={toggleTheme} toggleThemeIcon={toggleThemeIcon} />\r\n      <Container maxWidth=\"lg\">\r\n        <Grid container spacing={ 4 } className={ classes.firstItem }>\r\n          <Grid item xs={ 12 }>\r\n            <Card className={ classes.card}>\r\n              <CountryPicker handleCountryChange={ handleCountryChange }/>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>        \r\n        <Cards data={ data } />        \r\n        <Grid container spacing={ 4 }>\r\n          <Grid item xs={ 12 }>\r\n            <Card className={ classes.card}>\r\n              <CardContent>\r\n                <Chart data={ data } country={ country } />\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n      <BackToTop />\r\n      <AppFooter />\r\n    </MuiThemeProvider>      \r\n  );\r\n\r\n};","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\n\r\nimport { App } from './App';\r\n\r\nReactDom.render(<App />, document.getElementById('root'));"],"sourceRoot":""}